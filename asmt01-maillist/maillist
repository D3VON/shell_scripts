#!/bin/bash
#  Program Name: maillist
#        Author: Devon McBride
#         Class: cs260 - Unix System Administration
#                MW 5:30 - 7:00
# Last Modified: 02/04/2004
#
# Usage: maillist [-q] CRN#
# This program makes an email list file from the ccsf group file.
# The user enters a CRN number (just one) as a arguement.
# The email list is written to the same directory that the program is
# run in, as well as shown on the screen.
# The name of the file containing the email list is the same as the CRN given.
# In addition to the email list, the following is output 
# to the saved file and to the screen: 
#
#	   Absolute path for email list file 
#					          CRN Number
#				              Group Name
#			                    Group ID
#		              Number of students
#
# The user may us the [-q] option to run silently.
# If an error occured in silent mode, the user can learn about it by checking
# the exit status of the program ($?).
#############################################################
qmode="x" #making sure

# catches if -q is first arguement, and flags variable $qmode
if [ "$1" =  "-q" ]; then
    qmode="-q"
    shift
fi

crn=$1 #captures crn if it's been entered correctly

# Checks to see if there are the right number of arguements.
# since I already shifted away the -q if there was one, 
# there should only be one arg left.
if [ $# -ne 1 ]; then
    # if user selected quiet mode, then no error message.
    if [ "$qmode" = "-q" ]; then
	exit 1
    fi

    progname=$(basename $0)
    echo "Something's wrong with how you are running this program." >&2
    echo "You entered these arguements: $*" >&2
    echo "$progname: usage: $progname [-q] CRN-Number" >&2
    exit 1
fi

# find record that matches our crn; format is predictable 
# format is predictable, e.g. b99999::6006:jdoe01,....etc...
line=`grep "^[bc]$crn:" /etc/group`

# testing to see if that crn is valid or returns anything
if [ "$line" = "" ]; then
    if [ "$qmode" = "-q" ]; then # quiet mode doesn't report a thing! 
       exit 1
    fi
    echo "      Sorry.  There is no such group."
    exit 1
fi

groupname=`echo $line | cut -d: -f1`
groupID=`echo $line | cut -d: -f3`

# Puts userIDs into a temporary file in this directory
# The temporary.$$ name is unique b/c it used this program's process # ($$)
echo $line | cut -d: -f4 | tr ',' '\n' | sort > temporary.$$

# awks userID and joins with @ccsf.edu, and saves to temporary.$$ again.
# I then save it to a file named for the crn.
awk '{print $1 "@ccsf.edu"}' temporary.$$  > $crn 

# cleans up (removes) temporary.$$ file
rm temporary.$$

# counts addresses with numbers (those would be students, not teachers) 
count=`grep -c [0-9] $crn`
abspath=`pwd`
if [ "$qmode" = "-q" ]; then
    exit 0
else
    echo " Absolute path for email list file: $abspath/$crn" 
    echo "                        CRN Number: $crn"
    echo "                        Group Name: $groupname"
    echo "                          Group ID: $groupID"
    echo "                Number of students: $count"
    echo
    echo "       And here are the email addresses for CRN# $crn"
    echo "       -----------------------------------------------" 
    cat $crn
fi
exit 0
